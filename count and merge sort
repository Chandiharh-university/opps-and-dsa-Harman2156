#include <iostream>
#include <vector>
using namespace std;

void countSort(vector<int>& arr) {
    int maxElement = *max_element(arr.begin(), arr.end()), minElement = *min_element(arr.begin(), arr.end());
    int range = maxElement - minElement + 1;
    vector<int> count(range, 0), output(arr.size());
    for (int num : arr) count[num - minElement]++;
    for (int i = 1; i < range; i++) count[i] += count[i - 1];
    for (int i = arr.size() - 1; i >= 0; i--) output[--count[arr[i] - minElement]] = arr[i];
    arr = output;
}

void merge(vector<int>& arr, int left, int mid, int right) {
    vector<int> L(arr.begin() + left, arr.begin() + mid + 1), R(arr.begin() + mid + 1, arr.begin() + right + 1);
    int i = 0, j = 0, k = left;
    while (i < L.size() && j < R.size()) arr[k++] = (L[i] <= R[j]) ? L[i++] : R[j++];
    while (i < L.size()) arr[k++] = L[i++];
    while (j < R.size()) arr[k++] = R[j++];
}

void mergeSort(vector<int>& arr, int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);
        merge(arr, left, mid, right);
    }
}

int main() {
    int choice, n;
    cout << "1. Count Sort\n2. Merge Sort\nChoose: ";
    cin >> choice;
    cout << "Enter number of elements: ";
    cin >> n;
    vector<int> arr(n);
    cout << "Enter elements: ";
    for (int& num : arr) cin >> num;
    if (choice == 1) countSort(arr);
    else if (choice == 2) mergeSort(arr, 0, n - 1);
    else { cout << "Invalid choice!"; return 1; }
    for (int num : arr) cout << num << " ";
    return 0;
}
